# Creando un entorno virtual en python
- Instalar en el terminal: python -m venv venv

# Para activar el entorno virtual
- en el terminal: source venv/Scripts/activate
- para linux: source env/bin/activate

# Para desactivar el entorno virtual
- en el terminal: deactivate

------------------------------------------------------------
paso 1 - crear el entorno virtual
------------
python -m venv venv
------------------------------------------------------------
paso 2 - crear el .gitignore
------------------------------------------------------------
paso 3 - crear requeriments.txt
------------------------------------------------------------
paso 4 - activar el entorno virtual
------------
source venv/Scripts/activate
------------------------------------------------------------
paso 5 - instalar requirements.txt
------------
pip install -r requirements.txt
------------------------------------------------------------
paso 6 - crear el proyecto con django -> se agrega el punto para que no cree una subcarpeta con el mismo nombre y el manage.py lo cree en la misma direccion
------------
django-admin startproject [nombre_del_proyecto] 
django-admin startproject [nombre_del_proyecto] .
------------------------------------------------------------
paso 7 - dirigirte a la carpeta del proyecto
------------
cd [nombre_del_proyecto]
--------------------------------------------------c----------
paso 8 - crear el app en el proyecto
------------
python manage.py startapp [nombre_del_app]
------------------------------------------------------------
paso 9 - Editar en la ruta 'nombre_proyecto/settings.py' para agregar la app
INSTALLED_APPS = [
    '[nombre_del_app]',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
------------------------------------------------------------
paso 10 - Pasos para migrar tablas
------------
paso 1
python manage.py makemigrations
------
paso 2
python manage.py migrate
------------------------------------------------------------
paso 11 - Conectar tus bases de datos en vscode y crear la db
------------------------------------------------------------
paso 12 -
python manage.py createsuperuser
poner como usuario:admin  /  password:admin

paso 13 - instalar
django-cors-headers -- permite que django se concecte con react

paso 14 - Editar en la ruta 'nombre_proyecto/settings.py' para agregar el cors
INSTALLED_APPS = [
    'api',
    'rest_framework',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

paso 15 - Editar en la ruta 'nombre_proyecto/settings.py'
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

paso 16 - Editar en la ruta 'nombre_proyecto/settings.py'
CORS_ORIGIN_ALLOW_ALL =  True  // permite todos los permisos de las aplicaciones



paso 17 - Se agreg√≥ en requirements.txt cloudinary y luego se instala
django==3.2
djangorestframework
django-cors-headers
cloudinary

paso 18 - Se agrega en nombre-proyecto/setting.py
//al inicio
import cloudinary
INSTALLED_APPS = [
    'api',
    'rest_framework',
    'cloudinary',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
//en la parte final
cloudinary.config( 
  cloud_name = "daax6etga", 
  api_key = "473272218182152", 
  api_secret = "SUNlTmI6vaAg33fnTm-4mJO32OU" 
)



// token Authentication
//agregar en pos_backend/settings
INSTALLED_APPS = [
    'rest_framework_simplejwt',
]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication'
    ]
}
//agregar en pos_backend/urls
from rest_framework_simplejwt.views import (
    TokenObtainPairView,
    TokenRefreshView,
)
urlpatterns = [
    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),
    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),
]


heroku run python manage.py createsuperuser